services:
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    ports:
      - "8200:8200"
    volumes:
      - C:\Users\lenovo\Docker\vault\volumes\logs:/vault/logs
      - C:\Users\lenovo\Docker\vault\volumes\file:/vault/file
      - C:\Users\lenovo\Docker\vault\volumes\config:/vault/config
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/vault.json
  neo4j:
    image: neo4j:latest
    container_name: neo4j-dev
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - C:\Users\lenovo\Docker\neo4j:/data
  redis-stack:
    container_name: redis-server
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - redis_cache_data:/data
    networks:
      - ubs_network
  database:
    container_name: mysql-ubs-instance
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - C:\Users\lenovo\Docker\mysql:/var/lib/mysql
#      - mysql_data:/var/lib/mysql
    networks:
      - ubs_network

  keycloak:
    container_name: keycloak-dev
    image: quay.io/keycloak/keycloak:24.0.3
    ports:
      - "18080:8080"
      - "18443:8443"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    volumes:
      #      - keycloak_data:/opt/jboss/keycloak/standalone/data
      - keycloak_data:/opt/keycloak/data/h2
    networks:
      - ubs_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/realms/celestial-forge" ]
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    container_name: prometheus-dev
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
#      - prometheus_data:/etc/prometheus
      - C:/Users/lenovo/Docker/prometheus:/etc/prometheus
    networks:
      - ubs_network
    depends_on:
      - keycloak
  grafana:
    container_name: grafana-dev
    image: grafana/grafana-enterprise
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - ubs_network
    depends_on:
      - prometheus
  maildev:
    image: maildev/maildev
    container_name: maildev
    ports:
      - "1025:1025"   # SMTP port
      - "1080:1080"   # HTTP port for the web interface
    networks:
      - ubs_network
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - ubs_network
  kafka:
    container_name: kafka-01
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST: PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
    networks:
      - ubs_network

#  ubs:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: ubs-backend-api
#    image: codecoder005/ubs:latest
#    ports:
#      - "8080:8080"
#    environment:
#      APP_ENVIRONMENT: dev
#      JDBC_URL: jdbc:mysql://mysql-ubs-instance:3306/users_backend_service?createDatabaseIfNotExist=true
#      DB_USERNAME: root
#      DB_PASSWORD: password
#      OAUTH2_RESOURCE_SERVER_JWT_ISSUER_URI: http://keycloak-dev:8080/realms/celestial-forge # here port no should be internal of doc.cont
#    depends_on:
#      - database
#      - keycloak
#    networks:
#      - ubs_network

networks:
  ubs_network:
    driver: bridge

volumes:
  redis_cache_data:
  keycloak_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: C:\Users\lenovo\Docker\keycloak
  mysql_data:
    driver: local
    driver_opts:
      device: C:\Users\lenovo\Docker\mysql
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: C:/Users/lenovo/Docker/prometheus
#      device: C:/Users/lenovo/Downloads/version-control/popcorn/users-backend-service/src/main/resources/prometheus
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: C:/Users/lenovo/Docker/grafana
